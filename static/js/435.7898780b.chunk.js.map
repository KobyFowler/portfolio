{"version":3,"file":"static/js/435.7898780b.chunk.js","mappings":"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","sources":["components/ParticleBackground.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\n\nconst ParticleBackground = () => {\n  const canvasRef = useRef(null);\n  const mouseRef = useRef({ x: 0, y: 0 });\n  \n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    let animationFrameId;\n    let particles = [];\n    \n    class Particle {\n      constructor(x, y) {\n        this.x = x;\n        this.y = y;\n        this.size = Math.random() * 2 + 1;\n        this.baseX = x;\n        this.baseY = y;\n        this.density = (Math.random() * 30) + 1;\n        this.distance = undefined;\n        this.color = `rgba(59, 130, 246, ${Math.random() * 0.3 + 0.2})`; // Blue with random opacity\n        this.velocity = {\n          x: (Math.random() - 0.5) * 2,\n          y: (Math.random() - 0.5) * 2\n        };\n      }\n    \n      draw() {\n        ctx.beginPath();\n        ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n        ctx.fillStyle = this.color;\n        ctx.fill();\n      }\n    \n      update() {\n        const dx = mouseRef.current.x - this.x;\n        const dy = mouseRef.current.y - this.y;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n        const forceDirectionX = dx / distance;\n        const forceDirectionY = dy / distance;\n        const maxDistance = 100;\n        const force = (maxDistance - distance) / maxDistance;\n        const directionX = forceDirectionX * force * this.density;\n        const directionY = forceDirectionY * force * this.density;\n    \n        if (distance < maxDistance) {\n          this.x -= directionX;\n          this.y -= directionY;\n        } else {\n          if (this.x !== this.baseX) {\n            const dx = this.x - this.baseX;\n            this.x -= dx/20;\n          }\n          if (this.y !== this.baseY) {\n            const dy = this.y - this.baseY;\n            this.y -= dy/20;\n          }\n        }\n      }\n    }\n    \n    const init = () => {\n      particles = [];\n      const numberOfParticles = (canvas.width * canvas.height) / 9000;\n      for (let i = 0; i < numberOfParticles; i++) {\n        const x = Math.random() * canvas.width;\n        const y = Math.random() * canvas.height;\n        particles.push(new Particle(x, y));\n      }\n    };\n    \n    const connect = () => {\n      for (let a = 0; a < particles.length; a++) {\n        for (let b = a; b < particles.length; b++) {\n          const dx = particles[a].x - particles[b].x;\n          const dy = particles[a].y - particles[b].y;\n          const distance = Math.sqrt(dx * dx + dy * dy);\n          \n          if (distance < 160) {\n            const opacity = 1 - (distance / 160);\n            ctx.strokeStyle = `rgba(59, 130, 246, ${opacity * 0.2})`;\n            ctx.lineWidth = 1;\n            ctx.beginPath();\n            ctx.moveTo(particles[a].x, particles[a].y);\n            ctx.lineTo(particles[b].x, particles[b].y);\n            ctx.stroke();\n          }\n        }\n      }\n    };\n    \n    const animate = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      particles.forEach(particle => {\n        particle.update();\n        particle.draw();\n      });\n      connect();\n      animationFrameId = requestAnimationFrame(animate);\n    };\n    \n    const resize = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n      init();\n    };\n    \n    const handleMouseMove = (e) => {\n      mouseRef.current = {\n        x: e.clientX,\n        y: e.clientY\n      };\n    };\n    \n    window.addEventListener('resize', resize);\n    window.addEventListener('mousemove', handleMouseMove);\n    resize();\n    animate();\n    \n    return () => {\n      window.removeEventListener('resize', resize);\n      window.removeEventListener('mousemove', handleMouseMove);\n      cancelAnimationFrame(animationFrameId);\n    };\n  }, []);\n  \n  return (\n    <canvas\n      ref={canvasRef}\n      className=\"fixed inset-0 pointer-events-none z-0 bg-gradient-to-b from-gray-900 to-gray-800\"\n    />\n  );\n};\n\nexport default ParticleBackground;"],"names":["ParticleBackground","canvasRef","useRef","mouseRef","x","y","useEffect","canvas","current","ctx","getContext","animationFrameId","particles","Particle","constructor","this","size","Math","random","baseX","baseY","density","distance","undefined","color","velocity","draw","beginPath","arc","PI","fillStyle","fill","update","dx","dy","sqrt","forceDirectionY","force","directionX","directionY","animate","clearRect","width","height","forEach","particle","connect","a","length","b","opacity","strokeStyle","lineWidth","moveTo","lineTo","stroke","requestAnimationFrame","resize","window","innerWidth","innerHeight","init","numberOfParticles","i","push","handleMouseMove","e","clientX","clientY","addEventListener","removeEventListener","cancelAnimationFrame","_jsx","ref","className"],"sourceRoot":""}